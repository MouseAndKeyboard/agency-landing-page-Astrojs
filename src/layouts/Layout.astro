---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- Responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- SEO / Brand meta -->
    <meta
      name="description"
      content="Teleios: Rapid Prototyping & High-Tech R&D. We solve the hardest problems fast with elite, on-demand expert teams."
    />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- Google Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <title>Teleios â€“ {title}</title>
  </head>
  <body class="overflow-hidden overflow-y-auto bg-body">
    <!-- Navigation -->
    <Navbar />

    <!-- Main content -->
    <slot />

    <!-- Footer -->
    <Footer />

    <!-- Theme Switcher Script -->
    <script>
      const switchTheme = document.querySelector("[data-switch-theme]");
      if (
        localStorage.getItem("appTheme") === "dark" ||
        (!("appTheme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
      if (switchTheme) {
        switchTheme.addEventListener("click", (e) => {
          e.preventDefault();
          const doc = document.documentElement;
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            } else {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            } else {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            }
          }
        });
      }
    </script>

    <!-- Mobile Navigation Toggle Script -->
    <script>
      const toggleMenu = document.querySelector("[data-toggle-nav]");
      const navbar = document.querySelector("[data-navbar]") as HTMLElement;
      const overlayNav = document.querySelector("[data-nav-overlay]") as HTMLElement;
      const hamburgerIcon = document.getElementById("hamburger-icon");
      const closeIcon = document.getElementById("close-icon");
      
      if (toggleMenu && navbar && overlayNav && hamburgerIcon && closeIcon) {
        toggleMenu.addEventListener("click", (e) => {
          e.preventDefault();
          if (toggleMenu.getAttribute("data-open-nav") === "false") {
            // Open the menu
            toggleMenu.setAttribute("data-open-nav", "true");
            overlayNav.style.opacity = "1";
            overlayNav.style.pointerEvents = "auto";
            document.body.classList.add("!overflow-y-hidden");
            navbar.style.height = `${navbar.scrollHeight}px`;
            
            // Show close icon, hide hamburger
            hamburgerIcon.classList.add("hidden");
            closeIcon.classList.remove("hidden");
          } else {
            // Close the menu
            toggleMenu.setAttribute("data-open-nav", "false");
            overlayNav.style.opacity = "0";
            overlayNav.style.pointerEvents = "none";
            document.body.classList.remove("!overflow-y-hidden");
            navbar.style.height = "0px";
            
            // Show hamburger, hide close icon
            hamburgerIcon.classList.remove("hidden");
            closeIcon.classList.add("hidden");
          }
        });
        
        // Close menu when clicking on menu items or overlay
        navbar.addEventListener("click", (e) => {
          if (e.target instanceof Element && (e.target.tagName === 'A' || (e.target.parentElement && e.target.parentElement.tagName === 'A'))) {
            toggleMenu.setAttribute("data-open-nav", "false");
            overlayNav.style.opacity = "0";
            overlayNav.style.pointerEvents = "none";
            document.body.classList.remove("!overflow-y-hidden");
            navbar.style.height = "0px";
            
            // Show hamburger, hide close icon
            hamburgerIcon.classList.remove("hidden");
            closeIcon.classList.add("hidden");
          }
        });
        
        overlayNav.addEventListener("click", () => {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.style.opacity = "0";
          overlayNav.style.pointerEvents = "none";
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
          
          // Show hamburger, hide close icon
          hamburgerIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
        });
      }
    </script>

    <!-- Global Styles -->
    <style is:global>
      :root {
        /* Brand Colors */
        --brand-green: 38 120 58;
        --brand-green-dark: 32 100 48;
        --brand-green-light: 180 230 180;
        --brand-accent: 255 125 0;

        /* Neutrals & Text */
        --color-bg: 245 250 245;
        --color-box: 255 255 255;
        --color-border: 220 235 220;
        --color-text-dark: 31 41 55;
        --color-text-light: 219 234 219;

        /* Texture overlay (if needed) */
        --texture-overlay: 0, 0, 0, 0.05;
      }

      html {
        scroll-behavior: smooth;
      }

      body {
        font-family: "Raleway", sans-serif;
        background-color: rgb(var(--color-bg));
        background-image: url("/textures/subtle-noise.png");
        background-size: cover;
        color: rgb(var(--color-text-dark));
        line-height: 1.6;
      }

      .dark body {
        background-color: rgb(12, 25, 20);
        background-image: url("/textures/subtle-noise-dark.png");
        color: rgb(var(--color-text-light));
      }

      /* Helper Classes for Brand Colors */
      .text-brand-green {
        color: rgb(var(--brand-green));
      }
      .bg-brand-green {
        background-color: rgb(var(--brand-green));
      }
      .text-brand-accent {
        color: rgb(var(--brand-accent));
      }
      .bg-brand-accent {
        background-color: rgb(var(--brand-accent));
      }

      /* CTA Button Styles */
      .btn-cta {
        background-color: rgb(var(--brand-accent));
        color: #ffffff;
        padding: 0.75rem 1.5rem;
        border-radius: 9999px;
        text-transform: uppercase;
        font-weight: 600;
        transition: background-color 0.3s ease;
      }
      .btn-cta:hover,
      .btn-cta:focus {
        background-color: rgb(240, 115, 0);
      }

      /* Accessible Focus States */
      a,
      button {
        transition: color 0.2s ease, background-color 0.2s ease;
      }
      a:focus,
      button:focus {
        outline: 2px dotted rgb(var(--brand-accent));
        outline-offset: 3px;
      }
      a:focus:not(:focus-visible),
      button:focus:not(:focus-visible) {
        outline: none;
      }
    </style>
  </body>
</html>
